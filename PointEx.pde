Data dataVert, dataMain;
int vertCounter = 0;

void objMain() {
  vertCounter = 0; 
  
  dataMain = new Data();
  dataMain.beginSave();
  dataVert = new Data();
  dataVert.beginSave();
  
  buffer = img;
  for (int y = 0; y < sH; y++) {
    for (int x = 0; x < sW; x++) {
      // FIXME: this loses Z-resolution about tenfold ...
      //       -> should grab the real distance instead...
      color argb = buffer.pixels[y*width+x];
      gray[y][x] = gray(argb);
      if(gray[y][x] > 0){
        vertCounter++;
        if(fileType.equals("obj")){
          objVert(x,y);
        }else if(fileType.equals("ply")){
          plyVert(x,y);
        }
      }
    }
  }
  if(fileType.equals("obj")){
    objHeader();
    compileVert();
    objFooter();
  }else if(fileType.equals("ply")){
    plyHeader();
    compileVert();
    plyFooter();  
  }
  dataMain.endSave(filePath + "/" + fileName + zeroPadding(counter+1,imgNames.size()) + "." + fileType);
}

void compileVert(){
  for(int i=0;i<dataVert.datalist.size();i++){
    String s = (String) dataVert.datalist.get(i);
    dataMain.add(s);
  }
}

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

void objHeader() {
  //dataMain.add("####");
  //dataMain.add("#");
  //dataMain.add("# OBJ file generated by Meshlab");
  //dataMain.add("#");
  dataMain.add("####");
  //dataMain.add("# Object render_shot1_12.obj");
  dataMain.add("#");
  dataMain.add("# Vertices: "+ vertCounter);
  dataMain.add("# Faces: 0");
  dataMain.add("#");
  dataMain.add("####");
}

void objVert(int x, int y){
  dataVert.add("v " + x + " " + y + " " + gray[y][x]);
}

void objFooter() {
  dataMain.add("# " + vertCounter +" vertices, 0 vertex normals");
  dataMain.add("");
  dataMain.add("# 0 faces, 0 texture coords");
  dataMain.add("");
  dataMain.add("# End of File");
}

//~~~

void plyHeader() {
  dataMain.add("ply");
  dataMain.add("format ascii 1.0");
  dataMain.add("comment VCGLIB generated");
  dataMain.add("element vertex " + vertCounter);
  dataMain.add("property float x");
  dataMain.add("property float y");
  dataMain.add("property float z");
  dataMain.add("property uchar red");
  dataMain.add("property uchar green");
  dataMain.add("property uchar blue");
  dataMain.add("property uchar alpha");
  dataMain.add("element face 0");
  dataMain.add("property list uchar int vertex_indices");
  dataMain.add("end_header");
}

void plyVert(int x, int y){
  dataVert.add(x + " " + y + " " + gray[y][x] + " 192 192 192 255 "); //fixed vertex color for now. Trailing space is on purpose.
}

void plyFooter(){
  //
}

//~~~

